#if !canImport(ObjectiveC)
import XCTest

extension CapacityingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CapacityingTests = [
        ("testArrayConformsToCapacitying", testArrayConformsToCapacitying),
        ("testArraySliceConformsToCapacitying", testArraySliceConformsToCapacitying),
        ("testContiguousArrayConformsToCapacitying", testContiguousArrayConformsToCapacitying),
        ("testDictionaryConformsToCapacitying", testDictionaryConformsToCapacitying),
        ("testManagedBufferPointerConformsToCapacitying", testManagedBufferPointerConformsToCapacitying),
        ("testSetConformsToCapacitying", testSetConformsToCapacitying),
    ]
}

extension CountableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CountableTests = [
        ("testAnyBidirectionalCollectionConformsToCountable", testAnyBidirectionalCollectionConformsToCountable),
        ("testAnyCollectionConformsToCountable", testAnyCollectionConformsToCountable),
        ("testAnyRandomAccessCollectionConformsToCountable", testAnyRandomAccessCollectionConformsToCountable),
        ("testArrayConformsToCountable", testArrayConformsToCountable),
        ("testArraySliceConformsToCountable", testArraySliceConformsToCountable),
        ("testCollectionOfOneConformsToCountable", testCollectionOfOneConformsToCountable),
        ("testContiguousArrayConformsToCountable", testContiguousArrayConformsToCountable),
        ("testDefaultIndicesConformsToCountable", testDefaultIndicesConformsToCountable),
        ("testDictionary_KeysConformsToCountable", testDictionary_KeysConformsToCountable),
        ("testDictionary_ValuesConformsToCountable", testDictionary_ValuesConformsToCountable),
        ("testDictionaryConformsToCountable", testDictionaryConformsToCountable),
        ("testEmptyCollectionConformsToCountable", testEmptyCollectionConformsToCountable),
        ("testInt16_WordsConformsToCountable", testInt16_WordsConformsToCountable),
        ("testInt32_WordsConformsToCountable", testInt32_WordsConformsToCountable),
        ("testInt64_WordsConformsToCountable", testInt64_WordsConformsToCountable),
        ("testInt8_WordsConformsToCountable", testInt8_WordsConformsToCountable),
        ("testInt_WordsConformsToCountable", testInt_WordsConformsToCountable),
        ("testKeyValuePairsConformsToCountable", testKeyValuePairsConformsToCountable),
        ("testRepeatedConformsToCountable", testRepeatedConformsToCountable),
        ("testReversedCollectionConformsToCountable", testReversedCollectionConformsToCountable),
        ("testSetConformsToCountable", testSetConformsToCountable),
        ("testSliceConformsToCountable", testSliceConformsToCountable),
        ("testString_UnicodeScalarViewConformsToCountable", testString_UnicodeScalarViewConformsToCountable),
        ("testString_UTF16ViewConformsToCountable", testString_UTF16ViewConformsToCountable),
        ("testString_UTF8ViewConformsToCountable", testString_UTF8ViewConformsToCountable),
        ("testStringConformsToCountable", testStringConformsToCountable),
        ("testSubstring_UnicodeScalarViewConformsToCountable", testSubstring_UnicodeScalarViewConformsToCountable),
        ("testSubstring_UTF16ViewConformsToCountable", testSubstring_UTF16ViewConformsToCountable),
        ("testSubstring_UTF8ViewConformsToCountable", testSubstring_UTF8ViewConformsToCountable),
        ("testSubstringConformsToCountable", testSubstringConformsToCountable),
        ("testUInt16_WordsConformsToCountable", testUInt16_WordsConformsToCountable),
        ("testUInt32_WordsConformsToCountable", testUInt32_WordsConformsToCountable),
        ("testUInt64_WordsConformsToCountable", testUInt64_WordsConformsToCountable),
        ("testUInt8_WordsConformsToCountable", testUInt8_WordsConformsToCountable),
        ("testUInt_WordsConformsToCountable", testUInt_WordsConformsToCountable),
        ("testUnicode_Scalar_UTF16ViewConformsToCountable", testUnicode_Scalar_UTF16ViewConformsToCountable),
        ("testUnsafeBufferPointerConformsToCountable", testUnsafeBufferPointerConformsToCountable),
        ("testUnsafeMutableBufferPointerConformsToCountable", testUnsafeMutableBufferPointerConformsToCountable),
        ("testUnsafeMutableRawBufferPointerConformsToCountable", testUnsafeMutableRawBufferPointerConformsToCountable),
        ("testUnsafeRawBufferPointerConformsToCountable", testUnsafeRawBufferPointerConformsToCountable),
    ]
}

extension EndIndexableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EndIndexableTests = [
        ("testArrayConformsToEndIndexable", testArrayConformsToEndIndexable),
        ("testArraySliceConformsToEndIndexable", testArraySliceConformsToEndIndexable),
        ("testContiguousArrayConformsToEndIndexable", testContiguousArrayConformsToEndIndexable),
        ("testInt16_WordsConformsToEndIndexable", testInt16_WordsConformsToEndIndexable),
        ("testInt32_WordsConformsToEndIndexable", testInt32_WordsConformsToEndIndexable),
        ("testInt64_WordsConformsToEndIndexable", testInt64_WordsConformsToEndIndexable),
        ("testInt8_WordsConformsToEndIndexable", testInt8_WordsConformsToEndIndexable),
        ("testInt_WordsConformsToEndIndexable", testInt_WordsConformsToEndIndexable),
        ("testUInt16_WordsConformsToEndIndexable", testUInt16_WordsConformsToEndIndexable),
        ("testUInt32_WordsConformsToEndIndexable", testUInt32_WordsConformsToEndIndexable),
        ("testUInt64_WordsConformsToEndIndexable", testUInt64_WordsConformsToEndIndexable),
        ("testUInt8_WordsConformsToEndIndexable", testUInt8_WordsConformsToEndIndexable),
        ("testUInt_WordsConformsToEndIndexable", testUInt_WordsConformsToEndIndexable),
        ("testUnicode_Scalar_UTF16ViewConformsToEndIndexable", testUnicode_Scalar_UTF16ViewConformsToEndIndexable),
        ("testUnsafeBufferPointerConformsToEndIndexable", testUnsafeBufferPointerConformsToEndIndexable),
        ("testUnsafeMutableBufferPointerConformsToEndIndexable", testUnsafeMutableBufferPointerConformsToEndIndexable),
    ]
}

extension ExponentBitPatternableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ExponentBitPatternableTests = [
        ("testDoubleConformsToExponentBitPatternable", testDoubleConformsToExponentBitPatternable),
        ("testFloat80ConformsToExponentBitPatternable", testFloat80ConformsToExponentBitPatternable),
        ("testFloatConformsToExponentBitPatternable", testFloatConformsToExponentBitPatternable),
    ]
}

extension ExponentiableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ExponentiableTests = [
        ("testDoubleConformsToExponentiable", testDoubleConformsToExponentiable),
        ("testFloat80ConformsToExponentiable", testFloat80ConformsToExponentiable),
        ("testFloatConformsToExponentiable", testFloatConformsToExponentiable),
    ]
}

extension MaybeAlphabeticTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeAlphabeticTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeAlphabetic", testUnicode_Scalar_PropertiesConformsToMaybeAlphabetic),
    ]
}

extension MaybeAsciiTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeAsciiTests = [
        ("testCharacterConformsToMaybeAscii", testCharacterConformsToMaybeAscii),
        ("testStaticStringConformsToMaybeAscii", testStaticStringConformsToMaybeAscii),
        ("testUnicode_ScalarConformsToMaybeAscii", testUnicode_ScalarConformsToMaybeAscii),
    ]
}

extension MaybeAsciihexDigitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeAsciihexDigitTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeAsciihexDigit", testUnicode_Scalar_PropertiesConformsToMaybeAsciihexDigit),
    ]
}

extension MaybeBidiControlTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeBidiControlTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeBidiControl", testUnicode_Scalar_PropertiesConformsToMaybeBidiControl),
    ]
}

extension MaybeBidiMirroredTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeBidiMirroredTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeBidiMirrored", testUnicode_Scalar_PropertiesConformsToMaybeBidiMirrored),
    ]
}

extension MaybeCanonicalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeCanonicalTests = [
        ("testDoubleConformsToMaybeCanonical", testDoubleConformsToMaybeCanonical),
        ("testFloat80ConformsToMaybeCanonical", testFloat80ConformsToMaybeCanonical),
        ("testFloatConformsToMaybeCanonical", testFloatConformsToMaybeCanonical),
    ]
}

extension MaybeCaseIgnorableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeCaseIgnorableTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeCaseIgnorable", testUnicode_Scalar_PropertiesConformsToMaybeCaseIgnorable),
    ]
}

extension MaybeCasedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeCasedTests = [
        ("testCharacterConformsToMaybeCased", testCharacterConformsToMaybeCased),
        ("testUnicode_Scalar_PropertiesConformsToMaybeCased", testUnicode_Scalar_PropertiesConformsToMaybeCased),
    ]
}

extension MaybeCurrencySymbolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeCurrencySymbolTests = [
        ("testCharacterConformsToMaybeCurrencySymbol", testCharacterConformsToMaybeCurrencySymbol),
    ]
}

extension MaybeDashTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeDashTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeDash", testUnicode_Scalar_PropertiesConformsToMaybeDash),
    ]
}

extension MaybeDefaultIgnorableCodePointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeDefaultIgnorableCodePointTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeDefaultIgnorableCodePoint", testUnicode_Scalar_PropertiesConformsToMaybeDefaultIgnorableCodePoint),
    ]
}

extension MaybeDeprecatedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeDeprecatedTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeDeprecated", testUnicode_Scalar_PropertiesConformsToMaybeDeprecated),
    ]
}

extension MaybeDiacriticTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeDiacriticTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeDiacritic", testUnicode_Scalar_PropertiesConformsToMaybeDiacritic),
    ]
}

extension MaybeEmojiModifierBaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeEmojiModifierBaseTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeEmojiModifierBase", testUnicode_Scalar_PropertiesConformsToMaybeEmojiModifierBase),
    ]
}

extension MaybeEmojiModifierTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeEmojiModifierTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeEmojiModifier", testUnicode_Scalar_PropertiesConformsToMaybeEmojiModifier),
    ]
}

extension MaybeEmojiPresentationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeEmojiPresentationTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeEmojiPresentation", testUnicode_Scalar_PropertiesConformsToMaybeEmojiPresentation),
    ]
}

extension MaybeEmojiTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeEmojiTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeEmoji", testUnicode_Scalar_PropertiesConformsToMaybeEmoji),
    ]
}

extension MaybeEmptyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeEmptyTests = [
        ("testAnyBidirectionalCollectionConformsToMaybeEmpty", testAnyBidirectionalCollectionConformsToMaybeEmpty),
        ("testAnyCollectionConformsToMaybeEmpty", testAnyCollectionConformsToMaybeEmpty),
        ("testAnyRandomAccessCollectionConformsToMaybeEmpty", testAnyRandomAccessCollectionConformsToMaybeEmpty),
        ("testArrayConformsToMaybeEmpty", testArrayConformsToMaybeEmpty),
        ("testArraySliceConformsToMaybeEmpty", testArraySliceConformsToMaybeEmpty),
        ("testClosedRangeConformsToMaybeEmpty", testClosedRangeConformsToMaybeEmpty),
        ("testCollectionOfOneConformsToMaybeEmpty", testCollectionOfOneConformsToMaybeEmpty),
        ("testContiguousArrayConformsToMaybeEmpty", testContiguousArrayConformsToMaybeEmpty),
        ("testDefaultIndicesConformsToMaybeEmpty", testDefaultIndicesConformsToMaybeEmpty),
        ("testDictionary_KeysConformsToMaybeEmpty", testDictionary_KeysConformsToMaybeEmpty),
        ("testDictionary_ValuesConformsToMaybeEmpty", testDictionary_ValuesConformsToMaybeEmpty),
        ("testDictionaryConformsToMaybeEmpty", testDictionaryConformsToMaybeEmpty),
        ("testEmptyCollectionConformsToMaybeEmpty", testEmptyCollectionConformsToMaybeEmpty),
        ("testInt16_WordsConformsToMaybeEmpty", testInt16_WordsConformsToMaybeEmpty),
        ("testInt32_WordsConformsToMaybeEmpty", testInt32_WordsConformsToMaybeEmpty),
        ("testInt64_WordsConformsToMaybeEmpty", testInt64_WordsConformsToMaybeEmpty),
        ("testInt8_WordsConformsToMaybeEmpty", testInt8_WordsConformsToMaybeEmpty),
        ("testInt_WordsConformsToMaybeEmpty", testInt_WordsConformsToMaybeEmpty),
        ("testKeyValuePairsConformsToMaybeEmpty", testKeyValuePairsConformsToMaybeEmpty),
        ("testRangeConformsToMaybeEmpty", testRangeConformsToMaybeEmpty),
        ("testRepeatedConformsToMaybeEmpty", testRepeatedConformsToMaybeEmpty),
        ("testReversedCollectionConformsToMaybeEmpty", testReversedCollectionConformsToMaybeEmpty),
        ("testSetConformsToMaybeEmpty", testSetConformsToMaybeEmpty),
        ("testSliceConformsToMaybeEmpty", testSliceConformsToMaybeEmpty),
        ("testString_UnicodeScalarViewConformsToMaybeEmpty", testString_UnicodeScalarViewConformsToMaybeEmpty),
        ("testString_UTF16ViewConformsToMaybeEmpty", testString_UTF16ViewConformsToMaybeEmpty),
        ("testString_UTF8ViewConformsToMaybeEmpty", testString_UTF8ViewConformsToMaybeEmpty),
        ("testStringConformsToMaybeEmpty", testStringConformsToMaybeEmpty),
        ("testSubstring_UnicodeScalarViewConformsToMaybeEmpty", testSubstring_UnicodeScalarViewConformsToMaybeEmpty),
        ("testSubstring_UTF16ViewConformsToMaybeEmpty", testSubstring_UTF16ViewConformsToMaybeEmpty),
        ("testSubstring_UTF8ViewConformsToMaybeEmpty", testSubstring_UTF8ViewConformsToMaybeEmpty),
        ("testSubstringConformsToMaybeEmpty", testSubstringConformsToMaybeEmpty),
        ("testUInt16_WordsConformsToMaybeEmpty", testUInt16_WordsConformsToMaybeEmpty),
        ("testUInt32_WordsConformsToMaybeEmpty", testUInt32_WordsConformsToMaybeEmpty),
        ("testUInt64_WordsConformsToMaybeEmpty", testUInt64_WordsConformsToMaybeEmpty),
        ("testUInt8_WordsConformsToMaybeEmpty", testUInt8_WordsConformsToMaybeEmpty),
        ("testUInt_WordsConformsToMaybeEmpty", testUInt_WordsConformsToMaybeEmpty),
        ("testUnicode_Scalar_UTF16ViewConformsToMaybeEmpty", testUnicode_Scalar_UTF16ViewConformsToMaybeEmpty),
        ("testUnsafeBufferPointerConformsToMaybeEmpty", testUnsafeBufferPointerConformsToMaybeEmpty),
        ("testUnsafeMutableBufferPointerConformsToMaybeEmpty", testUnsafeMutableBufferPointerConformsToMaybeEmpty),
        ("testUnsafeMutableRawBufferPointerConformsToMaybeEmpty", testUnsafeMutableRawBufferPointerConformsToMaybeEmpty),
        ("testUnsafeRawBufferPointerConformsToMaybeEmpty", testUnsafeRawBufferPointerConformsToMaybeEmpty),
    ]
}

extension MaybeExtenderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeExtenderTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeExtender", testUnicode_Scalar_PropertiesConformsToMaybeExtender),
    ]
}

extension MaybeFiniteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeFiniteTests = [
        ("testDoubleConformsToMaybeFinite", testDoubleConformsToMaybeFinite),
        ("testFloat80ConformsToMaybeFinite", testFloat80ConformsToMaybeFinite),
        ("testFloatConformsToMaybeFinite", testFloatConformsToMaybeFinite),
    ]
}

extension MaybeFullCompositionExclusionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeFullCompositionExclusionTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeFullCompositionExclusion", testUnicode_Scalar_PropertiesConformsToMaybeFullCompositionExclusion),
    ]
}

extension MaybeGraphemeBaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeGraphemeBaseTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeGraphemeBase", testUnicode_Scalar_PropertiesConformsToMaybeGraphemeBase),
    ]
}

extension MaybeGraphemeExtendTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeGraphemeExtendTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeGraphemeExtend", testUnicode_Scalar_PropertiesConformsToMaybeGraphemeExtend),
    ]
}

extension MaybeHexDigitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeHexDigitTests = [
        ("testCharacterConformsToMaybeHexDigit", testCharacterConformsToMaybeHexDigit),
        ("testUnicode_Scalar_PropertiesConformsToMaybeHexDigit", testUnicode_Scalar_PropertiesConformsToMaybeHexDigit),
    ]
}

extension MaybeIdcontinueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeIdcontinueTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeIdcontinue", testUnicode_Scalar_PropertiesConformsToMaybeIdcontinue),
    ]
}

extension MaybeIdeographicTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeIdeographicTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeIdeographic", testUnicode_Scalar_PropertiesConformsToMaybeIdeographic),
    ]
}

extension MaybeIdsbinaryOperatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeIdsbinaryOperatorTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeIdsbinaryOperator", testUnicode_Scalar_PropertiesConformsToMaybeIdsbinaryOperator),
    ]
}

extension MaybeIdstartTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeIdstartTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeIdstart", testUnicode_Scalar_PropertiesConformsToMaybeIdstart),
    ]
}

extension MaybeIdstrinaryOperatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeIdstrinaryOperatorTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeIdstrinaryOperator", testUnicode_Scalar_PropertiesConformsToMaybeIdstrinaryOperator),
    ]
}

extension MaybeInfiniteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeInfiniteTests = [
        ("testDoubleConformsToMaybeInfinite", testDoubleConformsToMaybeInfinite),
        ("testFloat80ConformsToMaybeInfinite", testFloat80ConformsToMaybeInfinite),
        ("testFloatConformsToMaybeInfinite", testFloatConformsToMaybeInfinite),
    ]
}

extension MaybeJoinControlTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeJoinControlTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeJoinControl", testUnicode_Scalar_PropertiesConformsToMaybeJoinControl),
    ]
}

extension MaybeLetterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeLetterTests = [
        ("testCharacterConformsToMaybeLetter", testCharacterConformsToMaybeLetter),
    ]
}

extension MaybeLogicalOrderExceptionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeLogicalOrderExceptionTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeLogicalOrderException", testUnicode_Scalar_PropertiesConformsToMaybeLogicalOrderException),
    ]
}

extension MaybeLowercaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeLowercaseTests = [
        ("testCharacterConformsToMaybeLowercase", testCharacterConformsToMaybeLowercase),
        ("testUnicode_Scalar_PropertiesConformsToMaybeLowercase", testUnicode_Scalar_PropertiesConformsToMaybeLowercase),
    ]
}

extension MaybeMathSymbolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeMathSymbolTests = [
        ("testCharacterConformsToMaybeMathSymbol", testCharacterConformsToMaybeMathSymbol),
    ]
}

extension MaybeMathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeMathTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeMath", testUnicode_Scalar_PropertiesConformsToMaybeMath),
    ]
}

extension MaybeNaNTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeNaNTests = [
        ("testDoubleConformsToMaybeNaN", testDoubleConformsToMaybeNaN),
        ("testFloat80ConformsToMaybeNaN", testFloat80ConformsToMaybeNaN),
        ("testFloatConformsToMaybeNaN", testFloatConformsToMaybeNaN),
    ]
}

extension MaybeNewlineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeNewlineTests = [
        ("testCharacterConformsToMaybeNewline", testCharacterConformsToMaybeNewline),
    ]
}

extension MaybeNoncharacterCodePointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeNoncharacterCodePointTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeNoncharacterCodePoint", testUnicode_Scalar_PropertiesConformsToMaybeNoncharacterCodePoint),
    ]
}

extension MaybeNormalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeNormalTests = [
        ("testDoubleConformsToMaybeNormal", testDoubleConformsToMaybeNormal),
        ("testFloat80ConformsToMaybeNormal", testFloat80ConformsToMaybeNormal),
        ("testFloatConformsToMaybeNormal", testFloatConformsToMaybeNormal),
    ]
}

extension MaybeNumberTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeNumberTests = [
        ("testCharacterConformsToMaybeNumber", testCharacterConformsToMaybeNumber),
    ]
}

extension MaybePatternSyntaxTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybePatternSyntaxTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybePatternSyntax", testUnicode_Scalar_PropertiesConformsToMaybePatternSyntax),
    ]
}

extension MaybePatternWhitespaceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybePatternWhitespaceTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybePatternWhitespace", testUnicode_Scalar_PropertiesConformsToMaybePatternWhitespace),
    ]
}

extension MaybePunctuationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybePunctuationTests = [
        ("testCharacterConformsToMaybePunctuation", testCharacterConformsToMaybePunctuation),
    ]
}

extension MaybeQuotationMarkTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeQuotationMarkTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeQuotationMark", testUnicode_Scalar_PropertiesConformsToMaybeQuotationMark),
    ]
}

extension MaybeRadicalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeRadicalTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeRadical", testUnicode_Scalar_PropertiesConformsToMaybeRadical),
    ]
}

extension MaybeSentenceTerminalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeSentenceTerminalTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeSentenceTerminal", testUnicode_Scalar_PropertiesConformsToMaybeSentenceTerminal),
    ]
}

extension MaybeSignalingNaNTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeSignalingNaNTests = [
        ("testDoubleConformsToMaybeSignalingNaN", testDoubleConformsToMaybeSignalingNaN),
        ("testFloat80ConformsToMaybeSignalingNaN", testFloat80ConformsToMaybeSignalingNaN),
        ("testFloatConformsToMaybeSignalingNaN", testFloatConformsToMaybeSignalingNaN),
    ]
}

extension MaybeSoftDottedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeSoftDottedTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeSoftDotted", testUnicode_Scalar_PropertiesConformsToMaybeSoftDotted),
    ]
}

extension MaybeSubnormalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeSubnormalTests = [
        ("testDoubleConformsToMaybeSubnormal", testDoubleConformsToMaybeSubnormal),
        ("testFloat80ConformsToMaybeSubnormal", testFloat80ConformsToMaybeSubnormal),
        ("testFloatConformsToMaybeSubnormal", testFloatConformsToMaybeSubnormal),
    ]
}

extension MaybeSymbolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeSymbolTests = [
        ("testCharacterConformsToMaybeSymbol", testCharacterConformsToMaybeSymbol),
    ]
}

extension MaybeTerminalPunctuationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeTerminalPunctuationTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeTerminalPunctuation", testUnicode_Scalar_PropertiesConformsToMaybeTerminalPunctuation),
    ]
}

extension MaybeUnifiedIdeographTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeUnifiedIdeographTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeUnifiedIdeograph", testUnicode_Scalar_PropertiesConformsToMaybeUnifiedIdeograph),
    ]
}

extension MaybeUppercaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeUppercaseTests = [
        ("testCharacterConformsToMaybeUppercase", testCharacterConformsToMaybeUppercase),
        ("testUnicode_Scalar_PropertiesConformsToMaybeUppercase", testUnicode_Scalar_PropertiesConformsToMaybeUppercase),
    ]
}

extension MaybeVariationSelectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeVariationSelectorTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeVariationSelector", testUnicode_Scalar_PropertiesConformsToMaybeVariationSelector),
    ]
}

extension MaybeWhitespaceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeWhitespaceTests = [
        ("testCharacterConformsToMaybeWhitespace", testCharacterConformsToMaybeWhitespace),
        ("testUnicode_Scalar_PropertiesConformsToMaybeWhitespace", testUnicode_Scalar_PropertiesConformsToMaybeWhitespace),
    ]
}

extension MaybeWholeNumberTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeWholeNumberTests = [
        ("testCharacterConformsToMaybeWholeNumber", testCharacterConformsToMaybeWholeNumber),
    ]
}

extension MaybeXidcontinueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeXidcontinueTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeXidcontinue", testUnicode_Scalar_PropertiesConformsToMaybeXidcontinue),
    ]
}

extension MaybeXidstartTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeXidstartTests = [
        ("testUnicode_Scalar_PropertiesConformsToMaybeXidstart", testUnicode_Scalar_PropertiesConformsToMaybeXidstart),
    ]
}

extension MaybeZeroTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MaybeZeroTests = [
        ("testDoubleConformsToMaybeZero", testDoubleConformsToMaybeZero),
        ("testFloat80ConformsToMaybeZero", testFloat80ConformsToMaybeZero),
        ("testFloatConformsToMaybeZero", testFloatConformsToMaybeZero),
    ]
}

extension SignificandBitPatternableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SignificandBitPatternableTests = [
        ("testDoubleConformsToSignificandBitPatternable", testDoubleConformsToSignificandBitPatternable),
        ("testFloat80ConformsToSignificandBitPatternable", testFloat80ConformsToSignificandBitPatternable),
    ]
}

extension StartIndexableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StartIndexableTests = [
        ("testArrayConformsToStartIndexable", testArrayConformsToStartIndexable),
        ("testArraySliceConformsToStartIndexable", testArraySliceConformsToStartIndexable),
        ("testContiguousArrayConformsToStartIndexable", testContiguousArrayConformsToStartIndexable),
        ("testInt16_WordsConformsToStartIndexable", testInt16_WordsConformsToStartIndexable),
        ("testInt32_WordsConformsToStartIndexable", testInt32_WordsConformsToStartIndexable),
        ("testInt64_WordsConformsToStartIndexable", testInt64_WordsConformsToStartIndexable),
        ("testInt8_WordsConformsToStartIndexable", testInt8_WordsConformsToStartIndexable),
        ("testInt_WordsConformsToStartIndexable", testInt_WordsConformsToStartIndexable),
        ("testUInt16_WordsConformsToStartIndexable", testUInt16_WordsConformsToStartIndexable),
        ("testUInt32_WordsConformsToStartIndexable", testUInt32_WordsConformsToStartIndexable),
        ("testUInt64_WordsConformsToStartIndexable", testUInt64_WordsConformsToStartIndexable),
        ("testUInt8_WordsConformsToStartIndexable", testUInt8_WordsConformsToStartIndexable),
        ("testUInt_WordsConformsToStartIndexable", testUInt_WordsConformsToStartIndexable),
        ("testUnicode_Scalar_UTF16ViewConformsToStartIndexable", testUnicode_Scalar_UTF16ViewConformsToStartIndexable),
        ("testUnsafeBufferPointerConformsToStartIndexable", testUnsafeBufferPointerConformsToStartIndexable),
        ("testUnsafeMutableBufferPointerConformsToStartIndexable", testUnsafeMutableBufferPointerConformsToStartIndexable),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CapacityingTests.__allTests__CapacityingTests),
        testCase(CountableTests.__allTests__CountableTests),
        testCase(EndIndexableTests.__allTests__EndIndexableTests),
        testCase(ExponentBitPatternableTests.__allTests__ExponentBitPatternableTests),
        testCase(ExponentiableTests.__allTests__ExponentiableTests),
        testCase(MaybeAlphabeticTests.__allTests__MaybeAlphabeticTests),
        testCase(MaybeAsciiTests.__allTests__MaybeAsciiTests),
        testCase(MaybeAsciihexDigitTests.__allTests__MaybeAsciihexDigitTests),
        testCase(MaybeBidiControlTests.__allTests__MaybeBidiControlTests),
        testCase(MaybeBidiMirroredTests.__allTests__MaybeBidiMirroredTests),
        testCase(MaybeCanonicalTests.__allTests__MaybeCanonicalTests),
        testCase(MaybeCaseIgnorableTests.__allTests__MaybeCaseIgnorableTests),
        testCase(MaybeCasedTests.__allTests__MaybeCasedTests),
        testCase(MaybeCurrencySymbolTests.__allTests__MaybeCurrencySymbolTests),
        testCase(MaybeDashTests.__allTests__MaybeDashTests),
        testCase(MaybeDefaultIgnorableCodePointTests.__allTests__MaybeDefaultIgnorableCodePointTests),
        testCase(MaybeDeprecatedTests.__allTests__MaybeDeprecatedTests),
        testCase(MaybeDiacriticTests.__allTests__MaybeDiacriticTests),
        testCase(MaybeEmojiModifierBaseTests.__allTests__MaybeEmojiModifierBaseTests),
        testCase(MaybeEmojiModifierTests.__allTests__MaybeEmojiModifierTests),
        testCase(MaybeEmojiPresentationTests.__allTests__MaybeEmojiPresentationTests),
        testCase(MaybeEmojiTests.__allTests__MaybeEmojiTests),
        testCase(MaybeEmptyTests.__allTests__MaybeEmptyTests),
        testCase(MaybeExtenderTests.__allTests__MaybeExtenderTests),
        testCase(MaybeFiniteTests.__allTests__MaybeFiniteTests),
        testCase(MaybeFullCompositionExclusionTests.__allTests__MaybeFullCompositionExclusionTests),
        testCase(MaybeGraphemeBaseTests.__allTests__MaybeGraphemeBaseTests),
        testCase(MaybeGraphemeExtendTests.__allTests__MaybeGraphemeExtendTests),
        testCase(MaybeHexDigitTests.__allTests__MaybeHexDigitTests),
        testCase(MaybeIdcontinueTests.__allTests__MaybeIdcontinueTests),
        testCase(MaybeIdeographicTests.__allTests__MaybeIdeographicTests),
        testCase(MaybeIdsbinaryOperatorTests.__allTests__MaybeIdsbinaryOperatorTests),
        testCase(MaybeIdstartTests.__allTests__MaybeIdstartTests),
        testCase(MaybeIdstrinaryOperatorTests.__allTests__MaybeIdstrinaryOperatorTests),
        testCase(MaybeInfiniteTests.__allTests__MaybeInfiniteTests),
        testCase(MaybeJoinControlTests.__allTests__MaybeJoinControlTests),
        testCase(MaybeLetterTests.__allTests__MaybeLetterTests),
        testCase(MaybeLogicalOrderExceptionTests.__allTests__MaybeLogicalOrderExceptionTests),
        testCase(MaybeLowercaseTests.__allTests__MaybeLowercaseTests),
        testCase(MaybeMathSymbolTests.__allTests__MaybeMathSymbolTests),
        testCase(MaybeMathTests.__allTests__MaybeMathTests),
        testCase(MaybeNaNTests.__allTests__MaybeNaNTests),
        testCase(MaybeNewlineTests.__allTests__MaybeNewlineTests),
        testCase(MaybeNoncharacterCodePointTests.__allTests__MaybeNoncharacterCodePointTests),
        testCase(MaybeNormalTests.__allTests__MaybeNormalTests),
        testCase(MaybeNumberTests.__allTests__MaybeNumberTests),
        testCase(MaybePatternSyntaxTests.__allTests__MaybePatternSyntaxTests),
        testCase(MaybePatternWhitespaceTests.__allTests__MaybePatternWhitespaceTests),
        testCase(MaybePunctuationTests.__allTests__MaybePunctuationTests),
        testCase(MaybeQuotationMarkTests.__allTests__MaybeQuotationMarkTests),
        testCase(MaybeRadicalTests.__allTests__MaybeRadicalTests),
        testCase(MaybeSentenceTerminalTests.__allTests__MaybeSentenceTerminalTests),
        testCase(MaybeSignalingNaNTests.__allTests__MaybeSignalingNaNTests),
        testCase(MaybeSoftDottedTests.__allTests__MaybeSoftDottedTests),
        testCase(MaybeSubnormalTests.__allTests__MaybeSubnormalTests),
        testCase(MaybeSymbolTests.__allTests__MaybeSymbolTests),
        testCase(MaybeTerminalPunctuationTests.__allTests__MaybeTerminalPunctuationTests),
        testCase(MaybeUnifiedIdeographTests.__allTests__MaybeUnifiedIdeographTests),
        testCase(MaybeUppercaseTests.__allTests__MaybeUppercaseTests),
        testCase(MaybeVariationSelectorTests.__allTests__MaybeVariationSelectorTests),
        testCase(MaybeWhitespaceTests.__allTests__MaybeWhitespaceTests),
        testCase(MaybeWholeNumberTests.__allTests__MaybeWholeNumberTests),
        testCase(MaybeXidcontinueTests.__allTests__MaybeXidcontinueTests),
        testCase(MaybeXidstartTests.__allTests__MaybeXidstartTests),
        testCase(MaybeZeroTests.__allTests__MaybeZeroTests),
        testCase(SignificandBitPatternableTests.__allTests__SignificandBitPatternableTests),
        testCase(StartIndexableTests.__allTests__StartIndexableTests),
    ]
}
#endif
